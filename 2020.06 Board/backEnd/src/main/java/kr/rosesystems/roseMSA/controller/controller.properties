# @CrossOrigin
CORS: Cross-Origin Resource Sharing
	  보안 상의 이유로, 브라우저는 스크립트에서 시작한 교차 출처 HTTP 요청을 제한
	  웹 페이지에서 ajax(XMLHttpRequest) 사용 시, 다른 도메인의 서버 리소스(JSON 등)에 접근하기 위한 메커니즘
	  지정된 클래스의 모든 핸들러 메서드에 대해 CORS 설정이 적용됨
	 접근을 허용할 도메인을 지정할 경우, @CrossOrigin(origins="허용 도메인")

# Rest API

	 
# @RestController
Controller에 @ResponseBody가 처리된 편리한 어노테이션
Types that carry this annotation are treated as controllers where @RequestMapping methods assume @ResponseBody semantics by default.

# @ResponseBody
@RestController 사용 시, 따로 명시해주지 않아도 됨
리턴값에 자동으로 @ResponseBody를 붙게되어 HTTP 응답데이터(body)에 자바 객체가 매핑되어 전달

# @Autowired
Ioc 컨테이너에서 생성된 빈(Bean)중 필요한 의존 객체의 "타입"에 해당하는 빈을 찾아 주입

# @GetMapping
@RequestMapping(method = RequestMethod.GET)

# @PostMapping
@RequestMapping(method = RequestMethod.POST)

# @RequestBody
JSON.stringify 함수를 이용하여 데이터를 보내야 된다
contentType을 "application/json"으로 설정해주어야 한다
HTTP 요청의 body안에 데이터를 파라미터로 받기위해, @RequestBody를 사용
 
# @PathVariable
메소드의 @PathVariable를 이용해서 파라미터의 값을 받아옴